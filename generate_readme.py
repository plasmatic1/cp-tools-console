"""
The README for this project contains some autogenerated sections (namely, command help), and this script fills those portions in.

The script requires `cp-tools-console` to be installed in the current python environment to work.
"""

import md_toc
import subprocess as sub
import os.path as path

IN_PATH = 'readme_fmt.md'
OUT_PATH = 'readme.md'


def get_help_message(command):
    res = sub.run([command, '--help'], stdout=sub.PIPE, stderr=sub.PIPE, text=True)
    return res.stdout.strip()


def get_file(path):
    with open(path) as f:
        return f.read().strip()


with open(IN_PATH) as f:
    data = f.read()

COMMANDS = [
    'cptools-run',
    'cptools-companion-server',
    'cptools-stress-test',
    'cptools-make-file'
]

print('Substituting commands...')
for command in COMMANDS:
    print(f'Substituting command {command}...')
    data = data.replace(f'$$${command} info$$$', get_help_message(command))

print('Substituting default files...')
data = data.replace('$$$default configuration$$$', get_file(path.join('cptools', 'local_data', 'default_config.yml'))) \
           .replace('$$$default stress test info$$$', get_file(path.join('cptools', 'local_data', 'default_stress_test.yml')))

with open(OUT_PATH, 'w') as f:
    f.write(data)

print('Generating toc...')
toc = md_toc.build_toc(OUT_PATH, parser='github')
with open(OUT_PATH) as f:
    data = f.read()
# print(data)
with open(OUT_PATH, 'w') as f:
    f.write(data.replace('$$$toc$$$', toc))
